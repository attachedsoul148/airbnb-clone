import Banner from '@/components/Banner'
import Footer from '@/components/Footer'
import Header from '@/components/Header'
import LargeCard from '@/components/LargeCard'
import MediumCard from '@/components/MediumCard'
import SmallCard from '@/components/SmallCard'
import { ExploreType, LivingType } from '@/types'
import Head from 'next/head'

interface Props {
  exporeData: ExploreType[]
  livingData: LivingType[]
}

export default function Home({ exporeData, livingData }: Props) {
  return (
    <div className="h-screen overflow-y-scroll scrollbar-hide">
      <Head>
        <title>Airbnb</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />

      <Banner />

      <main>
        <section className="max-w-7xl mx-auto px-8 lg:px-16">
          <div>
            <h2 className="sm:text-4xl font-bold py-10 text-3xl">Explore Nearby</h2>
            <div className="grid sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4">
              {exporeData?.map((obj, i) => (
                <SmallCard key={i} {...obj} />
              ))}
            </div>
          </div>
        </section>

        <section className="max-w-7xl mx-auto px-8 lg:px-16 mb-10">
          <div>
            <h2 className="sm:text-4xl font-bold py-10 text-3xl">Live Anywhere</h2>
            <div className="flex scrollbar-hide space-x-5 max-w-7xl overflow-auto px-2 py-3">
              {livingData?.map((obj, i) => (
                <MediumCard key={i} {...obj} />
              ))}
            </div>
          </div>
        </section>

        <section className="max-w-7xl mx-auto px-8 lg:px-16">
          <LargeCard
            img="https://links.papareact.com/4cj"
            title="The Greatest Outdoors"
            description="Wishlists curated by Airbnb."
            buttonText="Get Inspired"
          />
        </section>
      </main>

      <Footer />
    </div>
  )
}

export const getStaticProps = async () => {
  const exporeData: ExploreType[] = await fetch('https://www.jsonkeeper.com/b/4G1G').then((res) =>
    res.json(),
  )

  const livingData: LivingType[] = await fetch('https://www.jsonkeeper.com/b/VHHT').then((res) =>
    res.json(),
  )

  return {
    props: {
      exporeData,
      livingData,
    },
  }
}
